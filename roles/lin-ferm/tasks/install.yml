---
- name: remove stock ferm
  apt:
    name: ferm
    state: absent
    purge: true

- name: install perl Net::DNS and ipset packages (block)
  block:
    - name: install perl Net::DNS and ipset packages (will rescue if it fails)
      apt:
        name: "{{ packages }}"
      no_log: "{{ hide_secrets |bool }}"  # reduce verbose failure message
  rescue:
    - name: install perl Net::DNS and ipset packages (update cache to rescue)
      apt:
        name: "{{ packages }}"
        update_cache: true
  vars:
    packages:
      - libnet-dns-perl
      - ipset
      - iptables
      ## install gcc to build 'no-lock' library
      - build-essential

- name: install extra iptables modules for ferm
  block:
    - name: install extra iptables modules (will update if fails)
      apt:
        name: "{{ extras }}"
  rescue:
    - name: install extra iptables modules (update caches)
      apt:
        name: "{{ extras }}"
        update_cache: true
  vars:
    extras:
      - xtables-addons-dkms
      - linux-headers-generic
  when: ferm_extras |bool

- name: download ferm script (skip in check mode)
  get_url:
    url: "{{ ferm_script_url }}"
    dest: "{{ ferm_binary }}"
    owner: root
    group: root
    mode: 0754
    force: "{{ ferm_upgrade |bool }}"
  notify: reload ferm service
  ## this task always reports as changed in check mode
  when: not ansible_check_mode

- name: upload ferm helper scripts
  template:
    src: "bin/{{ item.name }}"
    dest: "{{ ferm_bindir }}/{{ item.name |splitext |first }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  vars:
    ferm_nofork: "{{ '--no-fork' if ansible_lsb.release is version('16.04','>') else '' }}"
  loop:
    - {name: ferm-ipset.pl, mode: '754'}
    - {name: ferm-openvz.pl, mode: '754'}
    - {name: ferm-run.sh, mode: '754'}
    - {name: ferm-ctl.py, mode: '755'}
  loop_control:
    label: "{{ item.name }}"
  notify: reload ferm service

- name: build ferm helper library
  command:
    cmd: gcc -shared "-Wl,-soname,{{ lib_name }}.so" -o "{{ lib_path }}" -fPIC -lc -xc -
    stdin: "int flock(int fd, int op) { return 0; }"
    creates: "{{ lib_path }}"
  vars:
    lib_path: "{{ ferm_lib_nolock }}"
    lib_name: "{{ ferm_lib_nolock |basename }}"
...
