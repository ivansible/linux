---
- name: directories for ferm rules
  file:
    path: "{{ ferm_dir }}/{{ item }}.d"
    state: directory
    mode: 0755
  loop: "{{ ferm_rule_hooks }}"

- name: directory for ferm openvz file
  file:
    path: "{{ ferm_openvz_file |dirname }}"
    state: directory
    mode: 0750

- name: ensure ferm openvz file exists
  template:
    src: etc/initial-openvz.ferm
    dest: "{{ ferm_openvz_file }}"
    mode: 0640
    force: false

- name: create ferm configuration
  template:
    src: etc/config.ferm
    dest: "{{ ferm_dir }}/config.ferm"
  notify: reload ferm service

- name: ensure ferm files exist for host/port sets
  copy:
    dest: "{{ ferm_dir }}/{{ item }}"
    content: |
      # ferm {{ item }}
      # ansible-managed
    force: false
  loop: "{{ ferm_ipset_files }}"
  notify: reload ferm service

- name: set permissions of ferm config files
  file:
    path: "{{ ferm_dir }}/{{ item }}"
    owner: root
    group: root
    mode: 0640
  with_flattened: "{{ ['config.ferm', ferm_ipset_files] }}"

- name: setup core ferm rules before start
  ferm_rule:
    name: "ferm-{{ item.name }}"
    prio: "{{ item.prio }}"
    hook: "{{ item.hook |default('custom') }}"
    rule: "{{ lookup('template', 'rules/%s.ferm' % item.name) }}"
    reload: false
    ferm_dir: "{{ ferm_dir }}"
  tags: skip_ansible_lint
  notify: reload ferm service
  loop: "{{ ferm_core_rules }}"
  loop_control:
    label: "{{ item.name }}"

- name: open external ports in ferm before start
  ferm_port:
    port: "{{ ferm_ports_external }}"
    zone: external
    comment: ferm core
    reload: false
    ferm_dir: "{{ ferm_dir }}"
  tags: skip_ansible_lint
  notify: reload ferm service
...
