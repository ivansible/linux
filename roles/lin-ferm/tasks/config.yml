---
- name: directory for ferm configuration
  file:
    path: "{{ ferm_dir }}/{{ item }}"
    state: directory
  loop:
    - ""
    - parts
    - input
    - forward
    - before
    - after

- name: create ferm configuration
  template:
    src: "{{ item }}"
    dest: "{{ ferm_dir }}/{{ item }}"
  loop: "{{ ferm_configs }}"
  notify: restart ferm service

- name: create ferm port/host lists
  copy:
    dest: "{{ ferm_dir }}/{{ item }}"
    content: |
      # ferm {{ item }}
      # ansible-managed
    force: false
  loop: "{{ ferm_lists }}"
  notify: restart ferm service

- name: set permissions of ferm config files
  file:
    path: "{{ ferm_dir }}/{{ item }}"
    owner: root
    group: root
    mode: 0640
  with_flattened:
    - "{{ ferm_configs }}"
    - "{{ ferm_lists }}"

- name: open external ports in ferm
  lineinfile:
    path: "{{ ferm_dir }}/ports.ext"
    line: "{{ item |string }}"
  loop: "{{ ferm_ports_external }}"
  notify: reload ferm service

- name: open internal ports in ferm
  lineinfile:
    path: "{{ ferm_dir }}/ports.int"
    line: "{{ item |string }}"
  loop: "{{ ferm_ports_internal }}"
  notify: reload ferm service

- name: block ports in ferm
  lineinfile:
    path: "{{ ferm_dir }}/ports.block"
    line: "{{ item |string }}"
  loop: "{{ ferm_ports_block }}"
  notify: reload ferm service

- name: add internal hosts in ferm
  lineinfile:
    path: "{{ ferm_dir }}/hosts.int"
    line: "{{ item |string }}"
  loop: "{{ ferm_hosts_internal }}"
  notify: reload ferm service

- name: block hosts in ferm
  lineinfile:
    path: "{{ ferm_dir }}/hosts.block"
    line: "{{ item |string }}"
  loop: "{{ ferm_hosts_block }}"
  notify: reload ferm service
...
