#!/usr/bin/perl
use strict;
use warnings;
use IPC::Open2;

my $ferm_dir = '/etc/ferm';
my $ipset = '/sbin/ipset';
my $tempset = '';

END {
    if ($tempset) {
        `$ipset destroy $tempset`;
    }
}

$| = 1;

sub run {
    my ($cmd, $input) = @_;
    my $pid = open2(my $stdout, my $stdin, "($cmd) 2>&1")
        or die "cannot run $cmd\n";
    print $stdin $input;
    close $stdin or die;
    my $output = '';
    while (<$stdout>) {
        $output .= $_;
    }
    close $stdout or die;
    waitpid $pid, 0;
    die "error: $output" if $?;
    return $output;
}

sub make_tempset {
    for (my $num = 1; $num < 100; $num++) {
        my $name = "ferm$num";
        my $out = `ipset create $name bitmap:port range 1-2 2>&1`;
        unless ($?) {
            $tempset = $name;
            last;
        }
    }
    die "cannot create temporary ipset\n" unless $tempset;
}

sub parse_ports {
    my ($domain, $filename) = @_;
    my %ports;

    open(PORTS, $filename)
        or die("can't open $filename");
    for (<PORTS>) {
        s/#.*$//;
        s/^\s+|\s+$//;
        next if /^$/;

        /^(\d+)(?:-(\d+))?(?:\/(ip|tcp|udp))?$/;
        my ($start, $end, $type) = ($1, $2, $3);
        die "invalid port: $_\n" unless defined $start;
        $end = $start unless defined $end;
        $type = 'ip' unless defined $type;
        next if $end < $start;
        my $port = ($start == $end) ? "$start" : "$start-$end";
        $ports{$type}{$port} = $port;
    }
    close(PORTS);

    for my $type ('ip', 'tcp', 'udp') {
        my $hash = $ports{$type};
        my $setname = "ferm_ports_${domain}_${type}";
        my @cmd = (
            "create -exist $setname bitmap:port range 0-65535",
            "destroy $tempset",
            "create $tempset bitmap:port range 0-65535",
        );
        push @cmd, "add $tempset $_" for (sort keys %$hash);
        push @cmd, "swap $tempset $setname";
        run "$ipset -", join("\n", @cmd) . "\n";
    }
}

# main
make_tempset;
parse_ports 'ext', "$ferm_dir/ports.ext";
parse_ports 'int', "$ferm_dir/ports.int";
parse_ports 'block', "$ferm_dir/ports.block";
