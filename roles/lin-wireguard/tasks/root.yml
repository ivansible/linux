---
- name: add wireguard ppa repository
  apt_repository:
    repo: ppa:wireguard/wireguard
    ## if lsb_release executable is not installed on target,
    ## the python aptsource module defaults to the codename "sid"
    ## and fails. as a workaround, set codename here explicitly.
    codename: "{{ ansible_lsb.codename }}"
    filename: wireguard
    mode: 0644
    update_cache: true
  tags: lin_wg_install

- name: install wireguard from ppa
  apt:
    name: wireguard
  tags: lin_wg_install

- name: install wireguard config helper
  copy:
    src: wg-setmetric.sh
    dest: /usr/local/sbin/wg-setmetric
    owner: root
    group: root
    mode: 0755
  tags: lin_wg_install

- name: create wireguard config directory
  file:
    path: /etc/wireguard
    state: directory
    mode: 0755
  tags: lin_wg_install

- name: install wireguard-go on old kernels
  block:
    - name: check that wireguard-go binary exists
      stat:
        path: "{{ lin_wg_go_binary }}"
      register: wireguard_go_binary_stat

    - name: build wireguard-go
      include_tasks: go.yml
      args:
        apply:
          become: true
          tags:
            - lin_wg_go
            - lin_wg_all
      when: lin_wg_go_allow_reinstall |bool
            or not wireguard_go_binary_stat.stat.exists
  when: lin_wg_install_go |bool
  tags: lin_wg_go

- name: configure wireguard
  template:
    src: wireguard.conf
    dest: /etc/wireguard/{{ iface }}.conf
    mode: 0600
  vars:
    iface: "wg{{ idx }}"
    mtu: "{{ net.mtu |default(0) |int }}"
    addr: "{{ net.addr }}"
    port: "{{ net.port |default(0) |int }}"
    key: "{{ net.key }}"
    metric: "{{ net.metric |default(none) }}"
    peers: "{{ net.peers |default([],true) |flatten }}"
    keepalive: "{{ net.keepalive |default(0) |int }}"
  loop: "{{ lin_wg_nets }}"
  loop_control:
    loop_var: net
    index_var: idx
    label: "{{ net.name |default(iface) }}"
  register: wg_conf_result
  notify: restart wireguard service
  tags: lin_wg_config

- name: open wireguard port in ufw
  ufw:
    port: "{{ item.port |default(0) |string }}"
    proto: udp
  no_log: "{{ hide_secrets |bool }}"
  loop: "{{ lin_wg_nets }}"
  loop_control:
    index_var: idx
    label: "{{ item.name |default('wg%d' % idx) }}"
  when: lin_firewall == 'ufw'
        and item.port |default(0) |int
  tags: lin_wg_firewall

- name: open wireguard port in ferm
  ferm_port:
    port: "{{ item.port |default(0) }}"
    proto: udp
    comment: wireguard
  loop: "{{ lin_wg_nets }}"
  loop_control:
    index_var: idx
    label: "{{ item.name |default('wg%d' % idx) }}"
  when: lin_firewall == 'ferm'
        and item.port |default(0) |int
  tags:
    - skip_ansible_lint
    - lin_wg_firewall

- name: enable wireguard forwarding
  ferm_rule:
    name: wireguard
    prio: 77
    hook: custom
    rule: "{{ lookup('template', 'wg-forward.ferm') }}"
    state: "{{ lin_wg_forward |bool |ternary('present','absent') }}"
  when: lin_firewall == 'ferm'
  tags:
    - skip_ansible_lint
    - lin_wg_firewall

- name: enable wireguard service
  systemd:
    name: "wg-quick@wg{{ item }}"
    state: started
    enabled: true
    daemon_reload: "{{ wg_conf_result |default({}) is changed }}"
  loop: "{{ range(lin_wg_nets |count) |list }}"
  loop_control:
    label: "wg{{ item }}"
  register: enable_service_result
  until: enable_service_result is successful
  retries: 2  # workaround for pluto
  tags: lin_wg_service
...
