---
- name: directory for yggdrasil configs
  ansible.builtin.file:
    path: /etc/yggdrasil
    state: directory
    owner: root
    group: "{{ ygg_unix_group }}"
    mode: 0750

- name: update yggdrasil configuration
  ansible.builtin.template:
    src: yggdrasil.conf.j2
    dest: /etc/yggdrasil/yggdrasil.conf
    owner: root
    group: "{{ ygg_unix_group }}"
    mode: 0640
    backup: "{{ ygg_backups |bool }}"
  vars:
    name: "{{ inventory_hostname }}"
    via_nginx: "{{ ygg_nginx_in_prod |bool }}"
  notify: restart yggdrasil service

- name: make symbolic link to config for yggdrasilctl
  ansible.builtin.file:
    state: link
    src: ./yggdrasil/yggdrasil.conf
    dest: /etc/yggdrasil.conf
    force: true

- name: make yggdrasil configs for connected slaves
  ansible.builtin.template:
    src: yggdrasil.conf.j2
    dest: /etc/yggdrasil/yggdrasil.{{ alias }}
    owner: root
    group: "{{ ygg_unix_group }}"
    mode: 0640
    backup: "{{ ygg_backups |bool }}"
  vars:
    name: "{{ item }}"
    alias: "{{ hostvars[item].ygg_alias |d(name) }}"
    via_nginx: "{{ ygg_nginx_in_clients |bool }}"
  loop: "{{ ygg_slave_peers |d([],true) }}"
  loop_control:
    label: "{{ alias }}"

- name: make yggdrasil configs for isolated slaves
  ansible.builtin.template:
    src: yggdrasil.conf.j2
    dest: /etc/yggdrasil/yggdrasil.{{ alias }}-isolate
    owner: root
    group: "{{ ygg_unix_group }}"
    mode: 0640
    backup: "{{ ygg_backups |bool }}"
  vars:
    name: "{{ item }}"
    alias: "{{ hostvars[item].ygg_alias |d(name) }}"
    via_nginx: "{{ ygg_nginx_in_clients |bool }}"
    isolate: true
  loop: "{{ ygg_slave_peers |d([],true) }}"
  loop_control:
    label: "{{ alias }}"
...
