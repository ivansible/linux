{# keep client template synchronized between openvpn roles #}
{% block client_header %}
# {{ client_name }} @ {{ server_host }} ({{ server_name }})
client
{% endblock client_header %}
{% block client_proto %}
proto {{ client_proto }}
remote {{ server_host }} {{ visible_port }}
{% if proxy |default('') %}
{%   if proxy_type in ['socks', 'socks5', 'socks4'] %}
socks-proxy {{ proxy_host }} {{ proxy_port }}
{%   elif proxy_type in ['http'] %}
http-proxy {{ proxy_host }} {{ proxy_port }}
{%   else %}
# unsupported proxy '{{ proxy }}'
{%   endif %}
{% endif %}
dev {{ client_device }}
{% if interface_name |default('') %}
dev-node {{ interface_name }}
{% endif %}
{% endblock client_proto %}
{% block client_settings1 %}
resolv-retry infinite
nobind
persist-key
persist-tun
auth {{ ovpn_hmac_alg }}
auth-nocache
cipher {{ ovpn_cipher }}
tls-client
tls-version-min 1.2
tls-cipher {{ ovpn_cc_cipher }}
remote-cert-tls server
{% endblock client_settings1 %}
{% block client_verify %}
verify-x509-name {{ server_cname }} name
{% endblock client_verify %}
{% block client_settings2 %}
{% if ovpn_reneg_sec |int > 0 %}
reneg-sec {{ ovpn_reneg_sec }}
{% endif %}
{% if ovpn_compress %}
compress {{ ovpn_compress }}
{% endif %}
{% if ovpn_prevent_dns_leak |default(false) |bool %}
setenv opt block-outside-dns
{# ignore-unknown-option block-outside-dns #}
{# block-outside-dns #}
{% endif %}
verb 3
{% endblock client_settings2 %}
{% block common_keys %}
<tls-crypt>
{# remove comment from TLS crypt key text #}
{% for line in ovpn_tlscrypt_key.strip().splitlines() %}
{%   if line is not match('#') %}
{{     line }}
{%   endif %}
{% endfor %}
</tls-crypt>
<ca>
{# remove comment from CA certificate text #}
{% set ns = namespace(body=false) %}
{% for line in ovpn_ca_cert.strip().splitlines() %}
{%   set ns.body = ns.body or line is search('---BEGIN') %}
{%   if ns.body %}
{{     line }}
{%   endif %}
{% endfor %}
</ca>
{% endblock common_keys %}
{% block client_keys %}
<cert>
{# remove comment from client certificate #}
{% set ns = namespace(body=false) %}
{% for line in client_crt_text.strip().splitlines() %}
{%   set ns.body = ns.body or line is search('---BEGIN') %}
{%   if ns.body %}
{{     line }}
{%   endif %}
{% endfor %}
</cert>
<key>
{{ client_key_text.strip() }}
</key>
{% endblock client_keys %}
