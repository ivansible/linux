---
- name: add target user in the docker group
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: true
  become: true

- name: include the "reset ssh connection" task
  include_tasks: reset-connection.yml

- name: install docker login dependencies on bionic+
  ## Docker login on Bionic defaults to use the secretservice executable
  ## which seems to have some sort of X11 dependency for some reason.
  ## This results in error "Cannot autolaunch D-Bus without X11 $DISPLAY"
  ## If you install and configure `pass`, docker will use that instead,
  ## which seems to solve the problem.
  ##
  ## Note: there is no need to configure `gpg2` and `pass`, just install it.
  ## See: https://stackoverflow.com/a/52251706
  apt:
    name:
      - gnupg2
      - pass
      # - dbus-x11
    state: present
  become: true
  when: ansible_lsb.release is version('16.04','>')


- name: login target user into docker hub
  when: is_permitted |default(false) |bool
        and docker_hub_username |default('',true)
        and docker_hub_password |default('',true)
  block:
    - name: attempt to login into docker hub as user (will rescue if it fails)
      command:
        argv:
          - docker
          - login
          - --username={{ docker_hub_username }}
          - --password-stdin
        stdin: "{{ docker_hub_password }}"
        creates: ~/.docker/config.json

  rescue:
    - name: workaround for permission denied accessing docker socket
      block:
        - name: restart docker daemon to fix docker socket permission denied
          systemd:
            name: docker
            state: restarted

        - name: remove old docker hub token from root
          file:
            path: ~/.docker
            state: absent

        - name: attempt to login into docker hub as root
          command:
            argv:
              - docker
              - login
              - --username={{ docker_hub_username }}
              - --password-stdin
            stdin: "{{ docker_hub_password }}"

        - name: move docker hub token from root to login user
          ## using recursive chown because file module can't recurse
          ## noqa 302
          shell: >
            chown -R {{ ansible_user_uid }}:{{ ansible_user_gid }} ~/.docker &&
            rm -rf "{{ ansible_user_dir }}/.docker" &&
            mv ~/.docker "{{ ansible_user_dir }}/"
      ## end of rescue block
      become: true

  ## end of login block
  tags:
    - ip4only
...
