#!/bin/bash
#set -x
#. /etc/restic/vars
set -o pipefail
{{ lin_restic_binary }} version
{% for job in lin_restic_jobs |d([],true) %}
{%   set auto_tags = [job.name, inventory_hostname] %}
{%   set augment_tags = auto_tags + job.tags |d([]) %}
{%   set tag_opts = augment_tags |select |map('regex_replace', '^', '--tag=') |list %}
{%   set exclude_opts = job.excludes |d([]) |select |map('regex_replace', '^', '-e ') |list %}
{%   set other_opts = job.options |d([]) %}
{%   set all_opts = verb_opts + tag_opts + exclude_opts + other_opts %}
{%   set all_opts_str = all_opts |select |sort |unique |join(' ') %}
{%   set restic_cmd = '%s backup %s' |format(lin_restic_binary, all_opts_str) %}
{%   set restic_short = restic_cmd |regex_replace('^/usr/bin/') %}
{%   set pg_run = 'sudo -u postgres ' %}
{%   set pg_port = '-p %s' |format(lin_restic_postgres_port) %}
{%   set pg_stdin = '--stdin --stdin-filename=/pg_%s.sql' |format(job.database |d('')) %}
{%   set disable = job.disable |d(false) |bool %}
{%   if disable %}
echo '== {{ job.name }} ({{ job.type }}, disabled) =='
{%   else %}
echo '== {{ job.name }} ({{ job.type }}) =='
{%     if job.type == 'filesystem' %}
{{ restic_cmd }} {{ job.path }}
{%     elif job.type == 'postgres' and job.database == 'all' %}
{{ pg_run }}pg_dumpall {{ pg_port }} | {{ restic_short }} {{ pg_stdin }}
{%     elif job.type == 'postgres' and job.database != 'all' %}
{{ pg_run }}pg_dump {{ pg_port }} {{ job.database }} | {{ restic_short }} {{ pg_stdin }}
{%     elif job.type == 'command' %}
{{ job.command }}
{%     endif %}
{%   endif %}
{% endfor %}
echo '== backup done =='
