---
- name: remove requiretty from sudoers
  lineinfile:
    path: /etc/sudoers
    regexp: '^(Defaults\s+requiretty.*)'
    state: absent
    backup: yes
  tags: linbase_settings


- name: switch to fast apt mirrors
  template:
    src: sources.list.j2
    dest: /etc/apt/sources.list
    backup: yes
  register: apt_switch_mirrors
  when: linbase_apt_fast_mirrors |bool
  tags: linbase_mirrors

- name: update apt caches
  apt:
    update_cache: yes
  when: apt_switch_mirrors is changed
  tags: linbase_mirrors


- name: set system locale
  command: >
    localectl set-locale
      LANG={{ linbase_system_locale }}
      LANGUAGE={{ linbase_system_locale }}
  changed_when: not linbase_hide_changes |bool
  when: linbase_system_locale != ''
  tags: linbase_settings

- name: set timezone
  timezone:
    name: "{{ linbase_timezone }}"
  when: linbase_timezone != ''
  tags: linbase_settings


- block:
    - name: install basic packages (ok to fail once)
      apt:
        name: "{{ linbase_packages }}"
        state: present
      # failure message is too verbose..
      no_log: true
  rescue:
    - name: update apt cache and install basic packages
      apt:
        name: "{{ linbase_packages }}"
        state: present
        update_cache: yes
  tags: linbase_packages


- name: synchronize system time
  # this task requires time packages, which are installed above
  import_tasks: timesync.yml
  when: linbase_time_sync |bool
  tags: linbase_timesync


- import_tasks: telemetry.yml
  when: ansible_distribution_release == 'bionic'
  tags: linbase_telemetry


- name: tune kernel parameters
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    sysctl_file: /etc/sysctl.d/77-system.conf
  with_dict: "{{ linbase_sysctl }}"
  loop_control:
    label: "{{ item.key | regex_replace('^net\\.') }}"
  tags: linbase_sysctl


- name: configure firewall
  import_tasks: firewall.yml
  when: linbase_secure |bool
  tags: linbase_firewall


- name: set some common ssh settings
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.key }}"
    line: "{{ item.value }}"
    backrefs: no
    insertbefore: "^Match|^Subsystem|^# *BEGIN"
    firstmatch: yes
  with_dict:
    '^#*\s*(Pub[Kk]eyAuthentication)\b': 'PubkeyAuthentication yes'
    '^#*\s*(PermitEmptyPasswords)\b': 'PermitEmptyPasswords no'
    '^#*\s*(UseDNS)\b': 'UseDNS no'
    # see: https://www.linuxquestions.org/questions/linux-security-4/how-to-disable-ssh-version-banner-909540
    '^#*\s*(DebianBanner)\b': 'DebianBanner no'
  loop_control:
    label: "{{ item.key | regex_search('\\([^)]+\\)') }}"
  when: linbase_secure |bool
  notify: restart ssh service
  tags: linbase_ssh

- name: modify some common ssh settings
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.key }}"
    line: "{{ item.value }}"
    backrefs: yes
  with_dict:
    'DISABLED ^#\s*(AuthorizedKeysFile)\s+(.*)': '\1 \2'
  loop_control:
    label: "{{ item.key | regex_search('\\([^)]+\\)') }}"
  when: linbase_secure |bool
  notify: restart ssh service
  tags: linbase_ssh

- name: ensure ssh_known_hosts exists
  copy:
    dest: /etc/ssh/ssh_known_hosts
    content: ""
    force: no
  when: linbase_secure |bool
  tags: linbase_ssh

- name: harden permissions on ssh_known_hosts
  file:
    path: /etc/ssh/ssh_known_hosts
    owner: root
    group: root
    mode: 0644
  when: linbase_secure |bool
  tags: linbase_ssh

- name: disable some motd banners
  import_tasks: motd.yml
  tags: linbase_motd
...
