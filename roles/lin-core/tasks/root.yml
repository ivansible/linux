---
- name: remove requiretty from sudoers
  lineinfile:
    path: /etc/sudoers
    regexp: '^(Defaults\s+requiretty.*)'
    state: absent
    backup: true
  tags: lin_core_settings


- name: switch to fast apt mirrors
  template:
    src: sources.list.j2
    dest: /etc/apt/sources.list
    backup: true
  register: apt_switch_mirrors
  when: lin_core_apt_fast_mirrors |bool
  tags: lin_core_mirrors

- name: update apt caches
  apt:
    update_cache: true
  when: apt_switch_mirrors is changed
  tags: lin_core_mirrors


- name: fix localectl problem in minimal xenial docker
  # systemd-localed service cannot start without /etc/default/keyboard on xenial
  # see: https://github.com/systemd/systemd/issues/911
  copy:
    dest: /etc/default/keyboard
    content: ""
    force: false
  when: ansible_lsb.codename == 'xenial'
  tags: lin_core_settings

- name: set system locale
  command: >
    localectl set-locale
      LANG={{ lin_core_system_locale }}
      LANGUAGE={{ lin_core_system_locale }}
  changed_when: not lin_core_hide_changes |bool
  when: lin_core_system_locale != '' # noqa 602
  tags: lin_core_settings

- name: set timezone
  timezone:
    name: "{{ lin_core_timezone }}"
  when: lin_core_timezone != '' # noqa 602
  tags: lin_core_settings


- block:
    - name: install core packages (ok to fail once, output hidden)
      apt:
        name: "{{ lin_core_packages_core }}"
        state: present
      # failure message is too verbose, silence by default
      no_log: "{{ hide_secrets |bool }}"
  rescue:
    - name: update apt cache and install core packages
      apt:
        name: "{{ lin_core_packages_core }}"
        state: present
        update_cache: true
  tags: lin_core_packages

- name: install system logger
  apt:
    name:
      - rsyslog
      - logrotate
    state: present
  when: lin_use_rsyslog |bool
  tags: lin_core_packages

- block:
    - name: install core development packages (ok to fail once, log hidden)
      apt:
        name: "{{ lin_core_packages_devel }}"
        state: present
      no_log: "{{ hide_secrets |bool }}"
  rescue:
    - name: update apt lists and install core development packages
      apt:
        name: "{{ lin_core_packages_devel }}"
        state: present
        update_cache: true
  tags: lin_core_packages

# it may be a good idea to restart mitogen runner
# after installing python apt bindings
#- meta: reset_connection

- name: disable unattended upgrades
  apt:
    name: unattended-upgrades
    state: absent
  tags: lin_core_packages


- name: synchronize system time
  # this task requires time packages (installed above)
  import_tasks: timesync.yml
  when: lin_core_time_sync |bool
  tags: lin_core_timesync


- name: disable telemetry on ubuntu bionic
  import_tasks: telemetry.yml
  when: ansible_lsb.codename == 'bionic'
  tags: lin_core_telemetry


- name: tune kernel parameters
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    sysctl_file: /etc/sysctl.d/77-system.conf
  with_dict: "{{ lin_core_sysctl }}"
  loop_control:
    label: "{{ item.key | regex_replace('^net\\.') }}"
  when: allow_sysctl |bool
  tags: lin_core_sysctl

- name: enable BBR TCP congestion control on modern kernels
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.val }}"
    state: present
    sysctl_file: /etc/sysctl.d/77-bbr.conf
  loop:
    - key: net.core.default_qdisc
      val: fq
    - key: net.ipv4.tcp_congestion_control
      val: bbr
  loop_control:
    label: "{{ item.key | regex_replace('^net\\.') }}"
  when: ansible_kernel is version('4.9', '>')
        and allow_sysctl |bool
  tags:
    - lin_core_sysctl
    - lin_core_bbr


- name: setup swap space
  import_tasks: swap.yml
  when: lin_core_swap_enable |bool
        and lin_core_swap_mb |int > 0
  tags: lin_core_swap


- name: derive ssh port
  set_fact:
    real_ssh_port: "{{ real_ssh_port
                     | default(ansible_port)
                     | default(ansible_ssh_port)
                     | default(22) }}"
  tags:
    - lin_ferm_rules
    - lin_ferm_all
    - lin_core_ssh
    - lin_core_firewall

- name: configure port for ssh service
  import_tasks: ssh.yml
  when: lin_use_ssh |bool
  tags: lin_core_ssh


- name: create unix group for proxy processes
  group:
    name: proxy
    gid: 13
  tags: lin_core_firewall

- name: assert that firewall selector is valid
  assert:
    that: lin_firewall in ['ufw', 'ferm', 'none']
  tags: lin_core_firewall

- name: setup ufw firewall
  include_tasks: firewall-ufw.yml
  args:
    apply:
      become: true
      tags: lin_core_firewall
  when: lin_firewall == 'ufw'
  tags: lin_core_firewall

- name: setup ferm firewall
  include_tasks: firewall-ferm.yml
  args:
    apply:
      become: true
      tags: lin_core_firewall
  when: lin_firewall == 'ferm'
  tags:
    - lin_ferm_config
    - lin_ferm_install
    - lin_ferm_rules
    - lin_ferm_hosts
    - lin_ferm_service
    - lin_ferm_all
    - lin_core_firewall


- name: install helper scripts
  copy:
    src: "utils/{{ item }}.sh"
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    group: root
    mode: 0755
  loop:
    - clear-rootfs
    - clear-swap
  tags: lin_core_utils
...
