---
- name: detect latest rclone release
  uri:
    url: https://github.com/{{ lin_rclone_repo_owner }}/rclone/releases/latest
    method: HEAD
    creates: "{{ lin_rclone_allow_reinstall | ternary(omit, lin_rclone_binary) }}"
  #connection: local  # never use this with "creates"
  register: latest_rclone_release
  when: lin_rclone_version == 'latest'

- name: extract rclone release from github page
  set_fact:
    lin_rclone_version:
      "{{ latest_rclone_release.url | basename | regex_replace('^v') }}"
  when: latest_rclone_release is not skipped
        and latest_rclone_release.url is defined

- debug:
    msg: "latest rclone release from {{ lin_rclone_repo_owner }}: {{ lin_rclone_version }}"
  run_once: true
  when: latest_rclone_release is not skipped
        and latest_rclone_release.url is defined

- name: install rclone package
  apt:
    deb: https://github.com/{{ lin_rclone_repo_owner }}/rclone/releases/download/v{{ lin_rclone_version }}/rclone-v{{ lin_rclone_version }}-linux-amd64.deb
    only_upgrade: "{{ not lin_rclone_allow_reinstall |bool }}"
  register: rclone_deb_result
  failed_when:
    rclone_deb_result.failed and
    rclone_deb_result.msg.find('later version is already installed') == -1
  when: latest_rclone_release.stdout |default('') |regex_search('^skipped, since .* exists$') == ''
  notify: restart remote systemd mounts
...
