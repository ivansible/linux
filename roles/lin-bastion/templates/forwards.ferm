# TCP Forwards
# ansible-managed

@def $do_fwd_ipv4 = $do_ipv4;
@def $do_fwd_ipv6 = $do_ipv6;

# forwarding requires IPv6 table NAT, which is absent on OpenVZ
@if $openvz @def $do_fwd_ipv6 = 0;

@def &FORWARD_TCP($domain, $mark, $sport, $dport, $saddr, $daddr) = {
    domain $domain {
        @if @eq($domain,ip)  @def $daddr_to = $daddr;
        @if @eq($domain,ip6) @def $daddr_to = "[$daddr]";

        #@def $mark = @cat(0xf0,@substr(@cat(0000,$sport),-5,5));
        @def &isFwdMark() = proto tcp mod connmark mark $mark;

        table mangle chain PREROUTING
            proto tcp syn
            daddr $saddr dport $sport
            CONNMARK set-xmark $mark;

        table filter chain FORWARD     &isFwdMark() ACCEPT;
        table nat    chain PREROUTING  &isFwdMark() DNAT to-destination "$daddr_to:$dport";
        table nat    chain POSTROUTING &isFwdMark() MASQUERADE;
    }
}

{% for fwd in lin_bastion_forwards %}
{% set ipv6   = fwd.ipv6 |default(false) |bool %}
{% set flag   = ipv6 |ternary('$do_fwd_ipv6', '$do_fwd_ipv4') %}
{% set domain = ipv6 |ternary('ip6', ' ip') %}
{% set saddr  = fwd.saddr |default(ipv6 |ternary(lin_bastion_saddr6, lin_bastion_saddr4)) %}
{% set daddr  = fwd.daddr |default(ipv6 |ternary(lin_bastion_daddr6, lin_bastion_daddr4)) %}
{% set sport  = fwd.sport %}
{% set dport  = fwd.dport |default(sport, true) |format() %}
{% set mark   = '0xf0%05d' % sport %}
{% set name   = fwd.name |default('port %s' % sport) %}
{% if saddr and daddr %}
@if {{ flag }} &FORWARD_TCP({{ domain }}, {{ mark }}, {{ '%5s' % sport }}, {{ '%5s' % dport }}, {{ saddr }}, {{ daddr }}); # {{ name }}
{% endif %}
{% endfor %}
{% if not lin_bastion_forwards %}
# forwards not configured
{% endif %}
